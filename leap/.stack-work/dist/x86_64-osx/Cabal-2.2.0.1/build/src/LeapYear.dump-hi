
==================== FINAL INTERFACE ====================
2018-12-31 03:09:24.109312 UTC

interface leap-1.4.0.8-EvT0ngk8W65JXvuhKgnU9:LeapYear 8043
  interface hash: bd59e1535531371ea9f111aa89d8b67f
  ABI hash: 7b64be2d369dbec271eefa19eb4b47c4
  export-list hash: 58e73331b63a38b42460d071a231c7a0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8f52f5e5828eb5661f405d8d9ca450ec
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  LeapYear.isLeapYear
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
2f2848725d72645134c86bd32c2209e4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   LeapYear.$trModule3
                   LeapYear.$trModule1) -}
654c66a893c01a392871e808c3821a7f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LeapYear.$trModule2) -}
42e9737dca1fe60a6462c008f23c2120
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LeapYear"#) -}
38f1879e02eedef8e92bf936639ce4ff
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LeapYear.$trModule4) -}
40aab2bbce97ee380b9dd37d1ddd5425
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("leap-1.4.0.8-EvT0ngk8W65JXvuhKgnU9"#) -}
502ceabec6ec493363a57686c7c073e0
  isDivisable ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (numerator :: GHC.Integer.Type.Integer)
                   (demominator :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger#
                        demominator
                        LeapYear.isLeapYear4 of wild {
                   DEFAULT
                   -> case GHC.Integer.Type.eqInteger#
                             (GHC.Integer.Type.remInteger numerator demominator)
                             LeapYear.isLeapYear4 of wild1 { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 }
                   1# -> case GHC.Real.divZeroError ret_ty GHC.Types.Bool of {} }) -}
4b3a016837a9be6cdb4a556cd56b2d0b
  isLeapYear :: GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (year :: GHC.Integer.Type.Integer) ->
                 case LeapYear.isDivisable year LeapYear.isLeapYear3 of wild {
                   GHC.Types.False
                   -> case LeapYear.isDivisable year LeapYear.isLeapYear2 of wild1 {
                        GHC.Types.False -> LeapYear.isDivisable year LeapYear.isLeapYear1
                        GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.True }) -}
ca45ee708194f721d1ec260122dc4207
  isLeapYear1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
477bc474ae418ab8a54d6bc62355cbf6
  isLeapYear2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (100) -}
17089b5a681fb849446628ed895f4bb2
  isLeapYear3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (400) -}
b0d8b8d5f7edb5aca84629f7dd4a5c55
  isLeapYear4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

