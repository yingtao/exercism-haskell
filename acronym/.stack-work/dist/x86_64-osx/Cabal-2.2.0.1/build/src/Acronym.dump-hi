
==================== FINAL INTERFACE ====================
2018-12-31 00:28:39.295141 UTC

interface acronym-1.6.0.9-C7RPbXqEbm86JjRpglbf3n:Acronym 8043
  interface hash: 6bad22e3b325887d719cdc810396c009
  ABI hash: d72912caacffeae6c7b80fa638cbaa8b
  export-list hash: 906f21e31018c18dafd1b8b6fed7f539
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8f52f5e5828eb5661f405d8d9ca450ec
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Acronym.abbreviate
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 split-0.2.3.3
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Char 3e89818e2b8ef1a2cc5393163484da72
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Unicode 8234c40b59f035e845832a42e8725a00
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  split-0.2.3.3:Data.List.Split 5324097c17aea95e263e86195d8f4cf4
import  -/  split-0.2.3.3:Data.List.Split.Internals 5b68cd2231dc71aa99e1db1b43dd9a13
394ae82caf3d55c68a697ae34884a86c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Acronym.$trModule3
                   Acronym.$trModule1) -}
d6846cd50769a0c35a2636e8853e807f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Acronym.$trModule2) -}
838995e1ce11f7eab2cf4b3bdf076f69
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Acronym"#) -}
60229604e3d9dc0fbe89a21bd25d4d94
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Acronym.$trModule4) -}
fc86552fef73fb0ffccae3431fc5d4df
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("acronym-1.6.0.9-C7RPbXqEbm86JjRpglbf3n"#) -}
88ce1a39b1c14f945eb65bcb4618006b
  abbreviate :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: GHC.Base.String) ->
                 case Acronym.abbreviate_go1
                        (Data.List.Split.Internals.$wpostProcess
                           @ GHC.Types.Char
                           Data.List.Split.Internals.Drop
                           Data.List.Split.Internals.KeepBlankFields
                           Data.List.Split.Internals.KeepBlank
                           Data.List.Split.Internals.KeepBlank
                           (Data.List.Split.Internals.splitInternal
                              @ GHC.Types.Char
                              Acronym.abbreviate4
                                `cast`
                              (Sym (Data.List.Split.Internals.N:Delimiter[0] <GHC.Types.Char>_R))
                              xs)) of wild {
                   []
                   -> case Acronym.abbreviate3 of wild1 {
                        [] -> Acronym.abbreviate2
                        : ds1 xs1
                        -> GHC.List.filter @ GHC.Types.Char Acronym.abbreviate1 xs1 }
                   : ds1 xs1
                   -> case Acronym.abbreviate_go xs1 of wild1 {
                        [] -> Acronym.abbreviate2
                        : ds2 xs2
                        -> GHC.List.filter @ GHC.Types.Char Acronym.abbreviate1 xs2 } }) -}
02f5aca21feaba85a20b86af7a5a7559
  abbreviate1 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 case c of wild { GHC.Types.C# x ->
                 case x of wild1 {
                   DEFAULT -> GHC.Types.True ' '# -> GHC.Types.False } }) -}
4d36de8e3390104ea53d472f951bd2df
  abbreviate2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.List.filter
                   @ GHC.Types.Char
                   Acronym.abbreviate1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d2ca13d42c3878c90aeb98e96adeff13
  abbreviate3 :: [GHC.Types.Char]
  {- Unfolding: (Acronym.abbreviate_go
                   (GHC.Types.[] @ GHC.Types.Char)) -}
086b0f605f9e6e7b464c71642fb4d28a
  abbreviate4 :: [GHC.Types.Char -> GHC.Types.Bool]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char -> GHC.Types.Bool)
                   Acronym.abbreviate5
                   (GHC.Types.[] @ (GHC.Types.Char -> GHC.Types.Bool))) -}
aada76e2861280e7423fd107430dc1fe
  abbreviate5 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (GHC.Classes.eqChar Acronym.abbreviate6) -}
5011b5157b41b2dadd50a6c72b7c450a
  abbreviate6 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '-'#) -}
d9e1c581e23c65803cc411894e3d2e72
  abbreviate_go :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
cd5c039ef0e7d7dd28ce1981897b01ec
  abbreviate_go1 ::
    [Data.List.Split.Internals.Chunk GHC.Types.Char]
    -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

