
==================== FINAL INTERFACE ====================
2018-12-30 02:52:59.321819 UTC

interface main:Main 8043
  interface hash: 04a67b890998dc7ce19eba4bab695201
  ABI hash: f96df4b08c31d0c7a46c9a8bf4bff222
  export-list hash: 8b089f14196cb209fa9212d62f4f8f35
  orphan hash: 8f0314fc80cc64a22597ba7b208d853b
  flag hash: cf3a2a88d1a0babc92c4ff0ccbc75765
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3
                      ansi-terminal-0.8.0.4 array-0.5.2.0 base-4.11.1.0 call-stack-0.1.0
                      clock-0.7.2 colour-2.3.4 containers-0.5.11.0 deepseq-1.4.3.0
                      directory-1.3.1.5 filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hspec-2.5.5 hspec-core-2.5.5 hspec-expectations-0.8.2
                      integer-gmp-1.0.2.0 nucleotide-count-1.3.0.7 pretty-1.1.3.6
                      primitive-0.6.3.0 quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3
                      stm-2.4.5.0 template-haskell-2.13.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.5.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-2.5.5:Test.Hspec 41558dc4f7c564f9b4a3226d3f470d1b
import  -/  hspec-2.5.5:Test.Hspec.Runner af35bbc2e0e02e7e0ec0d23160c3b5fa
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options caffde013d1ba8c3168e0e154b863dde
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner 69f7c969300ffab0ef7196f683c5ca37
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec 4c057f7f7e0fbb8c90eb96a0e1bda37a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad 2dcdaa498f67707d054c44e8f8d280e5
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 713f0c8581412c4b3ae306dbada3ec4b
import  -/  nucleotide-count-1.3.0.7:DNA 03cc595e3332eb404df615dcce0f142d
1744a52ce85f650fbaafbff4d022c035
  $s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either
         GHC.Base.String
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       GHC.Base.String
                       (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                  (\ (ds :: Data.Either.Either
                              GHC.Base.String
                              (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                     (ds1 :: Data.Either.Either
                               GHC.Base.String
                               (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                   case ds of wild {
                     Data.Either.Left a1
                     -> case ds1 of wild1 {
                          Data.Either.Left b1 -> GHC.Base.eqString a1 b1
                          Data.Either.Right ipv -> GHC.Types.False }
                     Data.Either.Right a1
                     -> case ds1 of wild1 {
                          Data.Either.Left ipv -> GHC.Types.False
                          Data.Either.Right b1
                          -> Data.Map.Internal.$fEqMap_$c==
                               @ DNA.Nucleotide
                               @ GHC.Types.Int
                               DNA.$fEqNucleotide
                               GHC.Classes.$fEqInt
                               a1
                               b1 } })
                  Main.$s$fEqEither_$s$fEqEither_$c/= -}
dd36ead166dfa92e17e50e176c4335d1
  $s$fEqEither_$s$fEqEither_$c/= ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
    -> Data.Either.Either
         GHC.Base.String
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Either.Either
                           GHC.Base.String
                           (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   (y :: Data.Either.Either
                           GHC.Base.String
                           (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                 case x of wild {
                   Data.Either.Left a1
                   -> case y of wild1 {
                        Data.Either.Left b1
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        Data.Either.Right ipv -> GHC.Types.True }
                   Data.Either.Right a1
                   -> case y of wild1 {
                        Data.Either.Left ipv -> GHC.Types.True
                        Data.Either.Right b1
                        -> case Data.Map.Internal.$fEqMap_$c==
                                  @ DNA.Nucleotide
                                  @ GHC.Types.Int
                                  DNA.$fEqNucleotide
                                  GHC.Classes.$fEqInt
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
22d91df2c631df3930e6603cb4ca7ed2
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         [GHC.Types.Char]
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       [GHC.Types.Char]
                       (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ [GHC.Types.Char]
                     @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                     GHC.Show.$fShow[]_$s$fShow[]1
                     Main.$s$fShowEither_$s$fShowMap)
                  (\ (x :: Data.Either.Either
                             [GHC.Types.Char]
                             (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                   case x of wild {
                     Data.Either.Left b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither4)
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)3
                             (GHC.Show.showLitString
                                b1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Types.[] @ GHC.Types.Char))))
                     Data.Either.Right b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither2)
                          (Data.Map.Internal.$fShowMap_$cshowsPrec
                             @ DNA.Nucleotide
                             @ GHC.Types.Int
                             DNA.$fShowNucleotide
                             GHC.Show.$fShowInt
                             Data.Either.$fReadEither6
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [Data.Either.Either
                               [GHC.Types.Char]
                               (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Either.Either
                          [GHC.Types.Char]
                          (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                     (Data.Either.$fShowEither_$cshowsPrec
                        @ [GHC.Types.Char]
                        @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Main.$s$fShowEither_$s$fShowMap
                        Data.Either.$fShowEither1)
                     ls
                     s) -}
b381d2d4ec1e4957d291ff8425f3849b
  $s$fShowEither_$cshowList ::
    [Data.Either.Either
       [GHC.Types.Char]
       (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Either.Either
                             [GHC.Types.Char]
                             (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        [GHC.Types.Char]
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ [GHC.Types.Char]
                      @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                      GHC.Show.$fShow[]_$s$fShow[]1
                      Main.$s$fShowEither_$s$fShowMap
                      Data.Either.$fShowEither1)
                   ls
                   s) -}
9f49a8181a12914e33fe21fc47121209
  $s$fShowEither_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Either.Either
         [GHC.Types.Char]
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: GHC.Types.Int)
                   (w3 :: Data.Either.Either
                            [GHC.Types.Char]
                            (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Data.Either.$w$cshowsPrec
                   @ [GHC.Types.Char]
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   GHC.Show.$fShow[]_$s$fShow[]1
                   Main.$s$fShowEither_$s$fShowMap
                   ww1
                   w3 }) -}
9dc3b9338feff8dc862e0de53a343210
  $s$fShowEither_$s$fShowMap ::
    GHC.Show.Show (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                  (Data.Map.Internal.$fShowMap_$cshowsPrec
                     @ DNA.Nucleotide
                     @ GHC.Types.Int
                     DNA.$fShowNucleotide
                     GHC.Show.$fShowInt)
                  (\ (x :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int) ->
                   Data.Map.Internal.$fShowMap_$cshowsPrec
                     @ DNA.Nucleotide
                     @ GHC.Types.Int
                     DNA.$fShowNucleotide
                     GHC.Show.$fShowInt
                     Data.Map.Internal.$fDataMap3
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                     (Data.Map.Internal.$fShowMap_$cshowsPrec
                        @ DNA.Nucleotide
                        @ GHC.Types.Int
                        DNA.$fShowNucleotide
                        GHC.Show.$fShowInt
                        Data.Map.Internal.$fDataMap3)
                     ls
                     s) -}
f6a2bdbc1433b178eb9ba42916d2c218
  $s$fShowMap_$cshow ::
    Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int) ->
                 Data.Map.Internal.$fShowMap_$cshowsPrec
                   @ DNA.Nucleotide
                   @ GHC.Types.Int
                   DNA.$fShowNucleotide
                   GHC.Show.$fShowInt
                   Data.Map.Internal.$fDataMap3
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
dcebe20f7ae95aa3a10b7d376c3312fd
  $s$fShowMap_$cshowList ::
    [Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   (Data.Map.Internal.$fShowMap_$cshowsPrec
                      @ DNA.Nucleotide
                      @ GHC.Types.Int
                      DNA.$fShowNucleotide
                      GHC.Show.$fShowInt
                      Data.Map.Internal.$fDataMap3)
                   ls
                   s) -}
6beadd8fa696230df487db340ac96a7b
  $s$fShowMap_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: GHC.Types.Int)
                   (w3 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Data.Map.Internal.$w$cshowsPrec
                   @ DNA.Nucleotide
                   @ GHC.Types.Int
                   DNA.$fShowNucleotide
                   GHC.Show.$fShowInt
                   ww1
                   w3 }) -}
e2a49385d80b8117bea800a89e56a246
  $sfromList ::
    [(DNA.Nucleotide, a)] -> Data.Map.Internal.Map DNA.Nucleotide a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(DNA.Nucleotide, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ DNA.Nucleotide @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ DNA.Nucleotide
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                             (Data.Map.Internal.Tip @ DNA.Nucleotide @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 {
                             DNA.A
                             -> case ky of wild5 {
                                  DNA.A
                                  -> Main.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.A
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2
                                  DNA.C
                                  -> Main.$wpoly_go13
                                       @ a
                                       1#
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.A
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2
                                  DNA.G
                                  -> Main.$wpoly_go13
                                       @ a
                                       1#
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.A
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2
                                  DNA.T
                                  -> Main.$wpoly_go13
                                       @ a
                                       1#
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.A
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2 }
                             DNA.C
                             -> case ky of wild5 {
                                  DEFAULT
                                  -> Main.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.C
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2
                                  DNA.G
                                  -> Main.$wpoly_go13
                                       @ a
                                       1#
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.C
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2
                                  DNA.T
                                  -> Main.$wpoly_go13
                                       @ a
                                       1#
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.C
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2 }
                             DNA.G
                             -> case ky of wild5 {
                                  DEFAULT
                                  -> Main.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.G
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2
                                  DNA.T
                                  -> Main.$wpoly_go13
                                       @ a
                                       1#
                                       (Data.Map.Internal.Bin
                                          @ DNA.Nucleotide
                                          @ a
                                          1#
                                          DNA.G
                                          x
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                          (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                       wild2 }
                             DNA.T
                             -> case ky of wild5 { DEFAULT ->
                                Main.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ DNA.Nucleotide
                                     @ a
                                     1#
                                     DNA.T
                                     x
                                     (Data.Map.Internal.Tip @ DNA.Nucleotide @ a)
                                     (Data.Map.Internal.Tip @ DNA.Nucleotide @ a))
                                  wild2 } } } } } }) -}
a9b652ef64eb0c473a2d8114cec65317
  $sfromList1 ::
    Data.Map.Internal.Map DNA.Nucleotide a
    -> [(DNA.Nucleotide, a)] -> Data.Map.Internal.Map DNA.Nucleotide a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
3e8d39a58f5a178a5966cafb61f41afc
  $sinsert_$sgo13 ::
    DNA.Nucleotide
    -> DNA.Nucleotide
    -> a1
    -> Data.Map.Internal.Map DNA.Nucleotide a1
    -> Data.Map.Internal.Map DNA.Nucleotide a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d1761c10d791e8e798242da05d41b2f4
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map DNA.Nucleotide a
    -> [(DNA.Nucleotide, a)]
    -> Data.Map.Internal.Map DNA.Nucleotide a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
511d81352efe1eff7cdacbab87bb2cd6
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
e6fe6636c3daca0394311f19f6ef4b1a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main164
                        Main.main2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
290af0b69e32cf3a39090ecc319caa7d
  main10 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main11) -}
4707b41d1248a44072f5f26d800e96aa
  main100 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main102
                   Main.main23
                   Main.main102
                   Main.main101) -}
1d09b4a32b68813794b0aa311d993b87
  main101 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 56#) -}
61c6ed72c548acc335f9036942523205
  main102 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 32#) -}
6751ab0a55e249967bfd3e1c7c2d614b
  main103 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main106
                   Main.main104) -}
f6b521c88a875d6f1051c4f3180fc0b7
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main105) -}
eddd7e950fe04b95bf1eb2796396d04e
  main105 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("epetitive-sequence-has-only-guanosine"#) -}
779952929c2eff45adb98f4820a78c6f
  main106 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'r'#) -}
a9064c6fb8e00320211ff82fcd3c4d11
  main107 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main108
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
59768e94ac2ee60ca5bc9d0eb8d9f0a9
  main108 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main109) -}
6512dda9d1ff81e4ac198a5312838fda
  main109 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main129
                   Main.main121
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main110
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
6c4de8ae56d8b2cd1b02368dc4094551
  main11 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main31
                   Main.main16
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main12
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
2d8e808b6a1ead3e200f3484e46dca33
  main110 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main111 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
c4ac251c1eea48cd557fd643bee2b1e1
  main111 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main114
                   Main.main112
                   eta2) -}
f8c0319774a206392b6d8e2b5a191833
  main112 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts
                   (GHC.CString.unpackCString# Main.main113)) -}
ee9eaae6e026b36e6d268b289d6b9600
  main113 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("G"#) -}
9c204609c513287153a62043ea9a12be
  main114 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main115) -}
55c210f8ed0c0ec32c2fdbb4c2aea81d
  main115 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main116) -}
7f0c965360464dec8b0d986a45fda416
  main116 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main94
                   Main.main117) -}
20a23f6ce4b550b23a4909eb863971fe
  main117 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main93
                   Main.main118) -}
11c17985d6730da09e28b15a762d9fc7
  main118 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main119
                   Main.main88) -}
c94d125a21618de70de09c90debeac83
  main119 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main120)) -}
2f61581588031d086a61755962b9152d
  main12 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main13 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7910a2f59c82f606328ce609162f2517
  main120 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
6ec7e54f762a93add9078e641176ee60
  main121 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main122) -}
4a69987035a75889d44da42b58433888
  main122 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main123) -}
e6316fce5c0431ca8e1f49db9f1dee36
  main123 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main124) -}
d7492862c24ccc3692ce6eb1de57fcfd
  main124 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main125) -}
6330bddb50fc54f4e6c4d451fa7ad2d4
  main125 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main126
                   GHC.Stack.Types.EmptyCallStack) -}
431a91b423ec4f5ca37f86845c2a2434
  main126 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main128
                   Main.main23
                   Main.main128
                   Main.main127) -}
2228722562b524157defaf523ebd1d4a
  main127 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 68#) -}
08fa9327100a3cb2c3515321cef10bf7
  main128 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 26#) -}
45435ec63bc0d63a366408883cb8b050
  main129 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main75
                   Main.main130) -}
24a0abf2ae356706e1d208196ea6a677
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Main.main_eta of wild {
                   Data.Either.Left ds1 -> (# eta2, GHC.Tuple.() #)
                   Data.Either.Right ds1 -> Main.main14 eta2 }) -}
fa5c43bbaaaa76cc637c65eecf142c01
  main130 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main131) -}
bfb48256b2112c1216b42df025175703
  main131 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("an count one nucleotide in single-character input"#) -}
eb910979ac8c3ef4c27cd43e64d3e35e
  main132 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main133
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
bee16cd31b7e98d43f861b443f2ee0e0
  main133 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main134) -}
57b6dfcf0e6f87901febf0f7d1a06060
  main134 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main151
                   Main.main144
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main135
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
a9bb8b675eb337eca457386fd302317b
  main135 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main136 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7d2bf8c1ee19c22111ea18a156aaac3f
  main136 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main138
                   Main.main137
                   eta2) -}
7893a303bd905d3bb12609da2c950955
  main137 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e38540d80f79e9e97a23613b92264e45
  main138 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main139) -}
5c751a92395a2306a875a470babed896
  main139 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main140) -}
5b2c8b8e23d5c231e864839806744ae4
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
ff6c53790b63e712a659a85e90212aca
  main140 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main94
                   Main.main141) -}
b9e84aa5fb8115e05604ea7d1eb53f04
  main141 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main93
                   Main.main142) -}
9ff70ccf31e428b7b304b9b77bd45360
  main142 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main143
                   Main.main88) -}
3cf8d6de80b6a858fc5ed7718b0788c6
  main143 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main90)) -}
efaae1aca0c1c1e35655f95248ffe999
  main144 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main145) -}
083b4213a0784b7f6b26ddcba6a5a869
  main145 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main146) -}
7e0eac801832010f5c14e6a25b0dfa59
  main146 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main147) -}
b2c95819bff7f38155decefac681d5e9
  main147 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main148) -}
31e9c587076eeaab564ac13e8cbfcfe4
  main148 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main149
                   GHC.Stack.Types.EmptyCallStack) -}
611de57d159dcb318c9dfc7f41b619ff
  main149 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main55
                   Main.main23
                   Main.main55
                   Main.main150) -}
9deba3cd0a842818e09c2b0fa93992ea
  main15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AGXXACT"#) -}
48bdceae952f675ddc8068ac4d6385d2
  main150 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 53#) -}
2b22c2b10edeb5442fb57416bf86b4d2
  main151 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main154
                   Main.main152) -}
ee5a8868dd83be6966db0b0354f6f088
  main152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main153) -}
e8f5ad0db985be59ebf1d94b0a52bed8
  main153 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("mpty dna strand has no nucleotides"#) -}
fe778ae13af2e568d43f00d131f90815
  main154 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
f86a1d8da1743a57d1a740665de0c278
  main155 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main156) -}
0dc59bc711ffb82e00857cc659700763
  main156 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nucleotideCounts"#) -}
4b6c860c7322424cc37eeccb39f94ddc
  main157 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main158
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
6b292bb0a4be120d4bf6108b11473e22
  main158 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main162
                   Main.main159
                   GHC.Stack.Types.EmptyCallStack) -}
7c8464e9f8f4d83158a2542e34499f14
  main159 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main161
                   Main.main160
                   Main.main161
                   Main.main71) -}
3602514bebdc7597832437c9a69692da
  main16 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main17) -}
541f456876dc060a4f9a07f2f0cee05e
  main160 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
2ea8cd677463f0a1882859b07c2abe12
  main161 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
7247174357b8704c7bc6e139fc8a9fc3
  main162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main163) -}
1395fe6ae3e3a72e1045deb14497d810
  main163 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
fc9246a7d7456a6b7a0b41f35d595b93
  main164 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
beea89b3d24f5da2e05b7d12a414b6f1
  main165 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
2c6ab9f0ed614f68a14ba1105e77d9ec
  main17 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main18) -}
e52df9404a0c5c25af03247a11dbe194
  main18 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main19) -}
02a72e692d3be4e7cd125d9f37183ae3
  main19 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main20) -}
cb8cf3f5e703d150439f322301ce6c77
  main2 :: Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Main.main157
                   Main.main155
                   Main.main3
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
613cb88fdd6c5b23a255fc717cd48eb8
  main20 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main21
                   GHC.Stack.Types.EmptyCallStack) -}
fd466488f0918847994e7f0c0af0c0d6
  main21 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main24
                   Main.main22) -}
a9e87f0c70d73ad900421159c107fb02
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 34#) -}
b3f0672d0b9ac84378fa3e01e5f613c3
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 13#) -}
9e864459b3f3454dd5623daa84b2ab23
  main24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
ff1757f204351cd1d30bcdb7a16160c2
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main26) -}
5b84ab417fe1f56cabfbd642c83728c6
  main26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
2a59e8401e04dfb6807922cd98609c4b
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
3b7e3f6eac17d39321d7411ecb0a9fdb
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
0e799937545012c18b016ba7d4c995be
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main30) -}
f9ff432ec77f0ae78c782e3755bb5180
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, Main.main4 #)) -}
a703cb0c2985822e9ffc8834e0df9402
  main30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
c667f1fcff0b1ece86c9ad3570a57a5e
  main31 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main32) -}
7274e7c4b0b079c36189cf9c0f3ed6ec
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main33) -}
813d3a7dd6dd8a987d39dab786b00a00
  main33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("alidates strand"#) -}
2c4ae7eb836807c9598bc04443f7c450
  main34 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'v'#) -}
1cad4d746edaf961f8608b4eb87c6677
  main35 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main36
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9e1cb343dc07918978b4863374522462
  main36 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main37) -}
546b231b3e73c4d8c11b681f8e01968b
  main37 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main72
                   Main.main64
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main38
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
48ef2dd079b3ca4eb6c71e9e5aaafdf0
  main38 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main39 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7b653061dc4f0224764fcf4c5efd3b6f
  main39 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main42
                   Main.main40
                   eta2) -}
475cbd1b020ee20f8f972bbb98f6c271
  main4 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main5)) -}
0157ce7b4c8eacdedcfeee5e7c0ac1a7
  main40 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts
                   (GHC.CString.unpackCString# Main.main41)) -}
b0ea4ff72764364cc17efc8f502a34af
  main41 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC"#) -}
58baffb52582ecb03f9b756bd2f678e6
  main42 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main43) -}
814b135639cef7637a46e597882ee71a
  main43 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main44) -}
3f16949e9925e38f3b539617cfa916b9
  main44 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main54
                   Main.main45) -}
46aeb797ab91bf88d78949e2dc88b877
  main45 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main52
                   Main.main46) -}
cef75c537ba31f9ccbacc065e18c75a4
  main46 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main50
                   Main.main47) -}
2395ba15fc9872f0d93cb7eac77f7b92
  main47 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main48
                   (GHC.Types.[] @ (DNA.Nucleotide, GHC.Types.Int))) -}
563f1534fd26b5f3f57bc4b3d98f1c08
  main48 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.T, Main.main49)) -}
d41795727412854a4017195c9d719045
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
5f65202ff12e16dc69712d0e6de94c02
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main132
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main6) -}
697c684cef85eb1d1670af473b378f85
  main50 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main51)) -}
2f8f3a0d31c482b540f8153595f7e400
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
3a32b262636b2aa41e28dca80dafbf78
  main52 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.C, Main.main53)) -}
5b82f0accfe83adea813f3d5f172cb9d
  main53 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 12#) -}
e5188c5705af4cdc1dfbe4c98a6ba640
  main54 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.A, Main.main55)) -}
55aeb29b25f4d0d4417b92e28f407f8d
  main55 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 20#) -}
299314918363864bd8ea2b3550052dbe
  main56 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?6
                   Test.HUnit.Base.@?=2
                   Main.main57) -}
25f1b1e1704d283ef4ee9a0fb051cc2c
  main57 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldBe2
                   Main.main58) -}
b5e9e8c632646c96390e88c4db3054c2
  main58 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main62
                   Main.main59
                   GHC.Stack.Types.EmptyCallStack) -}
5d7d1e2650fbcc779ea6e972f7c1ddf2
  main59 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main61
                   Main.main22
                   Main.main61
                   Main.main60) -}
36b032e21c6ca2aeedb739660669f8c9
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main107
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
30957c5d408cbe8504317242fefe23de
  main60 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 67#) -}
570a83349c4ad743920edf74c7605c2d
  main61 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
2e86b393186d87fc0a11f85dd1405364
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main63) -}
969c394af06de35e46f3b46742f52a61
  main63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldBe"#) -}
ffb9e01954da9469ec4f6d749de375c2
  main64 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main65) -}
78a2f2a952390bc19421c8780415d6f8
  main65 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main66) -}
0d9542e2ea127a3ec3c7b7d926d6f125
  main66 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main67) -}
cfbd104cc2fc7feebb1390d153b32362
  main67 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main68) -}
415dec56a40bd633adf07a084c00647a
  main68 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main69
                   GHC.Stack.Types.EmptyCallStack) -}
54186a31f9931959e02deecf4d92a389
  main69 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main71
                   Main.main23
                   Main.main71
                   Main.main70) -}
1bd8fe6dcb24062bc67ab35ad15e8381
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main76
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
8d22c52a1229e8de781b5e6df3041eb6
  main70 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
36f21e753758435941b810e14d91d446
  main71 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
2b88a5ee5c8dcc26a73dfa3f03419fd9
  main72 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main75
                   Main.main73) -}
4fe03c1300cd3803ae6bb17b5e012d15
  main73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main74) -}
79ca79f6e37b885fc96aa0b608151271
  main74 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ounts all nucleotides"#) -}
9a77702eab4844d5aebab49976ff7a42
  main75 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'c'#) -}
798eb703cd4ceed4572e4565f3f6f4a2
  main76 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main77
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
6deb5a1bde49dab37390c01dde6739db
  main77 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main78) -}
016b48e8e1291cebe73445f6ca98aaff
  main78 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main103
                   Main.main95
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main79
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
45f4076b8c2edb1d453fc485de238747
  main79 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main80 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e2f243396b8e3ee9458ecdc1365e4ae0
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main35
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
25a2a3cfe3f328785fd1ab02e49867e2
  main80 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main83
                   Main.main81
                   eta2) -}
f24d6aac08f89f0749fe909a66d282b1
  main81 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts
                   (GHC.CString.unpackCString# Main.main82)) -}
efb2bf82f151069a4218aabb423f198b
  main82 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GGGGGGGG"#) -}
49d080a6894c76776f6ffef7b5a1de87
  main83 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main84) -}
b4f4dffec79d1ffef8eaa82dbf53629b
  main84 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main85) -}
8d6ee4844dc9eff888a2ae2c84e95da7
  main85 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main94
                   Main.main86) -}
7ee5f3c67e0280131eac20bae9f1da2d
  main86 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main93
                   Main.main87) -}
2a035695d233451a96b97ff9f1be9112
  main87 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main91
                   Main.main88) -}
48ea88340a980d4d977dd617d344e607
  main88 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main89
                   (GHC.Types.[] @ (DNA.Nucleotide, GHC.Types.Int))) -}
9fb84029c4429f636f0764401f105cff
  main89 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.T, Main.main90)) -}
46529b24734e711b34d01a18fe2017c2
  main9 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main10
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
c52cd43a74e0e34ed14fcbada82c0da9
  main90 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c21f5c79778531b04b6bffd76f997215
  main91 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main92)) -}
e2ca9a26bef615cc4c28f9d725cb99d3
  main92 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
61c3e4ecdbeb76beb5e702386bb19111
  main93 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.C, Main.main90)) -}
ead367110d6a02c1d5b4a7c2e310da6c
  main94 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.A, Main.main90)) -}
8c514b3e16f80578ee10c02f98147f26
  main95 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main96) -}
a513ea0512f789904c8f670eb20d91f0
  main96 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main97) -}
5bfa1dd1d35745aa19c0aaf0fba1ff9f
  main97 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main98) -}
d532d740159a507fe0214b4164319c03
  main98 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main99) -}
021aa223458eeadf16c727044f15c659
  main99 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main100
                   GHC.Stack.Types.EmptyCallStack) -}
4bcb9d55a289baafb64c15dfa1a88ed3
  main_eta ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts
                   (GHC.CString.unpackCString# Main.main15)) -}
"SPEC/Main $fEqEither @ String @ (Map Nucleotide Int)" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                (Data.Map.Internal.Map
                                                                                   DNA.Nucleotide
                                                                                   GHC.Types.Int))
                                                                       (v :: GHC.Classes.Eq
                                                                               GHC.Base.String)
  Data.Either.$fEqEither @ [GHC.Types.Char]
                         @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                         v
                         v1
  = Main.$s$fEqEither
"SPEC/Main $fEqEither_$c/= @ String @ (Map Nucleotide Int)" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                        (Data.Map.Internal.Map
                                                                                           DNA.Nucleotide
                                                                                           GHC.Types.Int))
                                                                            ($dEq :: GHC.Classes.Eq
                                                                                       GHC.Base.String)
  Data.Either.$fEqEither_$c/= @ [GHC.Types.Char]
                              @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                              $dEq
                              $dEq1
  = Main.$s$fEqEither_$s$fEqEither_$c/=
"SPEC/Main $fShowEither @ [Char] @ (Map Nucleotide Int)" [orphan] forall (v1 :: GHC.Show.Show
                                                                                  (Data.Map.Internal.Map
                                                                                     DNA.Nucleotide
                                                                                     GHC.Types.Int))
                                                                         (v :: GHC.Show.Show
                                                                                 [GHC.Types.Char])
  Data.Either.$fShowEither @ [GHC.Types.Char]
                           @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                           v
                           v1
  = Main.$s$fShowEither
"SPEC/Main $fShowEither_$cshowList @ [Char] @ (Map Nucleotide Int)" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                  (Data.Map.Internal.Map
                                                                                                     DNA.Nucleotide
                                                                                                     GHC.Types.Int))
                                                                                    ($dShow :: GHC.Show.Show
                                                                                                 [GHC.Types.Char])
  Data.Either.$fShowEither_$cshowList @ [GHC.Types.Char]
                                      @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$cshowList
"SPEC/Main $fShowEither_$cshowsPrec @ [Char] @ (Map Nucleotide Int)" [orphan] [0] forall (w1 :: GHC.Show.Show
                                                                                                  (Data.Map.Internal.Map
                                                                                                     DNA.Nucleotide
                                                                                                     GHC.Types.Int))
                                                                                         (w :: GHC.Show.Show
                                                                                                 [GHC.Types.Char])
  Data.Either.$fShowEither_$cshowsPrec @ [GHC.Types.Char]
                                       @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                                       w
                                       w1
  = Main.$s$fShowEither_$cshowsPrec
"SPEC/Main $fShowMap @ Nucleotide @ Int" [orphan] forall (v1 :: GHC.Show.Show
                                                                  GHC.Types.Int)
                                                         (v :: GHC.Show.Show DNA.Nucleotide)
  Data.Map.Internal.$fShowMap @ DNA.Nucleotide @ GHC.Types.Int v v1
  = Main.$s$fShowEither_$s$fShowMap
"SPEC/Main $fShowMap_$cshow @ Nucleotide @ Int" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                              GHC.Types.Int)
                                                                ($dShow :: GHC.Show.Show
                                                                             DNA.Nucleotide)
  Data.Map.Internal.$fShowMap_$cshow @ DNA.Nucleotide
                                     @ GHC.Types.Int
                                     $dShow
                                     $dShow1
  = Main.$s$fShowMap_$cshow
"SPEC/Main $fShowMap_$cshowList @ Nucleotide @ Int" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                  GHC.Types.Int)
                                                                    ($dShow :: GHC.Show.Show
                                                                                 DNA.Nucleotide)
  Data.Map.Internal.$fShowMap_$cshowList @ DNA.Nucleotide
                                         @ GHC.Types.Int
                                         $dShow
                                         $dShow1
  = Main.$s$fShowMap_$cshowList
"SPEC/Main $fShowMap_$cshowsPrec @ Nucleotide @ Int" [orphan] [0] forall (w1 :: GHC.Show.Show
                                                                                  GHC.Types.Int)
                                                                         (w :: GHC.Show.Show
                                                                                 DNA.Nucleotide)
  Data.Map.Internal.$fShowMap_$cshowsPrec @ DNA.Nucleotide
                                          @ GHC.Types.Int
                                          w
                                          w1
  = Main.$s$fShowMap_$cshowsPrec
"SPEC/Main fromList @ Nucleotide _" [orphan] forall @ a
                                                    ($dOrd :: GHC.Classes.Ord DNA.Nucleotide)
  Data.Map.Internal.fromList @ DNA.Nucleotide @ a $dOrd
  = Main.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

